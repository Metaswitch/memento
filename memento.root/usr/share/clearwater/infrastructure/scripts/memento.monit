#!/bin/sh

# @file memento.monit
#
# Project Clearwater - IMS in the Cloud
# Copyright (C) 2013  Metaswitch Networks Ltd
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version, along with the "Special Exception" for use of
# the program along with SSL, set forth below. This program is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
# The author can be reached by email at clearwater@metaswitch.com or by
# post at Metaswitch Networks Ltd, 100 Church St, Enfield EN2 6BQ, UK
#
# Special Exception
# Metaswitch Networks Ltd  grants you permission to copy, modify,
# propagate, and distribute a work formed by combining OpenSSL with The
# Software, or a work derivative of such a combination, even if such
# copying, modification, propagation, or distribution would otherwise
# violate the terms of the GPL. You must comply with the GPL in all
# respects for all of the code used other than OpenSSL.
# "OpenSSL" means OpenSSL toolkit software distributed by the OpenSSL
# Project and licensed under the OpenSSL Licenses, or a work based on such
# software and licensed under the OpenSSL Licenses.
# "OpenSSL Licenses" means the OpenSSL License and Original SSLeay License
# under which the OpenSSL Project distributes the OpenSSL toolkit software,
# as those licenses appear in the file LICENSE-OPENSSL.

. /etc/clearwater/config

# Set up the monit configuration for memento with the right IP addresses and ports
cat > /etc/monit/conf.d/memento.monit <<EOF
# Check the Memento process.

# Monitor the service's PID file and memory use.
check process memento_process with pidfile /var/run/memento/memento.pid
  group memento

  # The start, stop and restart commands are linked to alarms
  start program = "/bin/bash -c '/usr/share/clearwater/bin/issue-alarm monit 5000.3; /etc/init.d/memento start'"
  stop program = "/bin/bash -c '/usr/share/clearwater/bin/issue-alarm monit 5000.3; /etc/init.d/memento stop'"
  restart program = "/bin/bash -c '/usr/share/clearwater/bin/issue-alarm monit 5000.3; /etc/init.d/memento restart'"

  # Check the service's resource usage, and abort the process if it's too high. This will
  # generate a core file and trigger diagnostics collection.
  if memory > 80% for 6 cycles then exec "/bin/bash -c '/usr/share/clearwater/bin/issue-alarm monit 5000.3; /etc/init.d/memento abort'"

# Clear any alarms if the process has been running long enough.
check program memento_uptime with path /usr/share/clearwater/infrastructure/monit_uptime/check-memento-uptime
  group memento
  depends on memento_process
  every 3 cycles
  if status != 0 then alert

# Check the HTTP interface. This depends on the Memento process (and so won't run
# unless the Memento process is running)
check program poll_memento with path "/usr/share/clearwater/bin/poll_memento.sh"
  group memento
  depends on memento_process

  # Aborting generates a core file and triggers diagnostic collection.
  if status != 0 for 2 cycles then exec "/bin/bash -c '/usr/share/clearwater/bin/issue-alarm monit 5000.3; /etc/init.d/memento abort'"

# Check the server's public interfaces via HTTPS to nginx and raise an alarm if
# the server isn't reachable
check program poll_memento_https with path "/usr/share/clearwater/bin/poll_memento_https.sh"
  group memento
  depends on memento_process

  if status != 0 for 2 cycles
    then exec "/usr/share/clearwater/bin/issue-alarm monit 5007.3"
    else if succeeded
        then exec "/usr/share/clearwater/bin/issue-alarm monit 5007.1"
EOF
chmod 0644 /etc/monit/conf.d/memento.monit

# Force monit to reload its configuration
reload clearwater-monit || true
